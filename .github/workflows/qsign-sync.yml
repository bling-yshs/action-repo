name: Clone, Modify, and Sync QSign with jsDelivr

on:
  repository_dispatch: # 允许通过 GitHub API 调用触发
    types: [trigger-qsign-update] # 自定义事件类型
  workflow_dispatch: # 允许手动触发

jobs:
  clone_and_modify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4 # 检出当前仓库，以便后续推送修改

      - name: Clone QSign repository
        run: git clone https://gitee.com/haanxuan/QSign.git ./sign

      - name: Modify script X
        run: |
          # 确定脚本 X 的确切文件名和路径
          SCRIPT_X_PATH="./sign/X" # 假设 X 文件在克隆下来的 sign 文件夹的根目录

          if [ ! -f "$SCRIPT_X_PATH" ]; then
            echo "错误：脚本 X 在路径 $SCRIPT_X_PATH 未找到！"
            exit 1
          fi

          # 原 Gitee 链接
          GiteeBaseUrl="https://gitee.com/haanxuan/QSign/raw/main"
          # 新的 jsDelivr 基础 URL (请仔细检查此格式)
          # 通常 jsDelivr 使用 @branch-name, 例如 @main
          # 您提供的格式是 @refs/heads/main
          JsDelivrBaseUrl="https://cdn.jsdelivr.net/gh/bling-yshs/action-repo@refs/heads/main/sign"


          echo "将 Gitee 链接替换为 jsDelivr 链接..."

          # 替换 Test 文件的链接
          sed -i "s|${GiteeBaseUrl}/Test|${JsDelivrBaseUrl}/Test|g" "$SCRIPT_X_PATH"
          echo "已尝试替换 Test 链接。"

          # 替换 ver 文件的链接
          sed -i "s|${GiteeBaseUrl}/ver|${JsDelivrBaseUrl}/ver|g" "$SCRIPT_X_PATH"
          echo "已尝试替换 ver 链接。"

          # 如果还有其他文件链接需要替换，可以在这里添加更多 sed 命令
          # 例如，如果脚本X本身也被引用，并且其URL也需要改变：
          # sed -i "s|旧的脚本X的URL|${JsDelivrBaseUrl}/X|g" "$SCRIPT_X_PATH"

          echo "脚本 X 修改完成。"
          echo "修改后的脚本内容（部分）："
          head -n 20 "$SCRIPT_X_PATH" # 显示前20行以供检查
          echo "..."
          tail -n 20 "$SCRIPT_X_PATH" # 显示后20行以供检查

      - name: Remove .git directory from cloned repository
        run: rm -rf ./sign/.git

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ./sign
          if git diff --staged --quiet; then
            echo "没有检测到文件更改，无需提交。"
          else
            git commit -m "ci: 更新 QSign 脚本链接为 jsDelivr 并同步"
            git push --force origin HEAD:${{ github.ref_name }}
            echo "更改已强制推送到仓库。"
          fi
